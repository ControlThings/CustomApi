apply plugin: 'com.android.library'

def getGitVersion = { ->
    def stdout = new ByteArrayOutputStream()

    exec {
        commandLine 'git', 'describe', '--abbrev=4', '--always', '--tags'
        standardOutput = stdout
    }


    return stdout.toString().trim()
}

def getGitClean = { ->

    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'status', '--porcelain'
        standardOutput = stdout

    }
    if ("${stdout.size()}" > 0) {
        return "-d"
    } else {
        return "-c"
    }
}

android {
    compileSdkVersion 25

    def versionPropsFile = file('version.properties')
    if (versionPropsFile.canRead()) {
        def Properties versionProps = new Properties()
        versionProps.load(new FileInputStream(versionPropsFile))
        def version_code = versionProps['VERSION_CODE'].toInteger()
        def version_name = versionProps['VERSION_NAME']
        def git_version = getGitVersion

        defaultConfig {
            minSdkVersion 16
            targetSdkVersion 25
            versionCode version_code
            versionName version_name

            testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

            buildConfigField "String", "GitVersion", "\"${git_version}\""
            buildConfigField "String", "GitClean", "\"${getGitClean()}\""
        }
        buildTypes {
            release {
                minifyEnabled false
                proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

                libraryVariants.all { variant ->
                    variant.outputs.each { output ->
                        def outputFile = output.outputFile
                        if (outputFile != null && outputFile.name.endsWith('.aar')) {
                            def fileName = "${archivesBaseName}-${git_version}.aar"
                            output.outputFileName = new File(outputFile.parent, fileName)
                        }
                    }
                }
            }
        }
        sourceSets {
            main {
                jni.srcDirs = []
                jniLibs.srcDir 'src/main/libs'
            }
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.0.1'
    testCompile 'junit:junit:4.12'
    // https://mvnrepository.com/artifact/org.mongodb/bson
    compile group: 'org.mongodb', name: 'bson', version: '3.6.0'
}
